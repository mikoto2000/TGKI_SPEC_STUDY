==========================
システム状態とコンテキスト
==========================

----------------------------
カーネル動作状態と非動作状態
----------------------------

- カーネルの初期化完了後からカーネル終了処理開始までの間を「カーネル動作状態」と呼ぶ
- それ以外の状態を「カーネル非動作状態」と呼ぶ
- マルチプロセッサ対応カーネルでは、プロセッサごとに状態を持つ


カーネル動作状態
----------------

- 各種カーネルの全機能を使える


カーネル非動作状態
------------------

- NMI を除くすべての割り込みがマスクされる
- 呼び出せるサービスコールに制限がある
   - システムインタフェースレイヤ API は呼び出せる
   - カーネル非動作状態を参照するサービスコール(sns_ker) は呼び出せる
   - 上記以外のサービスコールを呼び出した場合の動作は保証されない。


----------------------------------------
タスクコンテキストと非タスクコンテキスト
----------------------------------------

- 処理単位が実行される環境をコンテキストと呼ぶ
   - 処理単位が使うスタック領域、プロセッサの動作モードなど

タスクコンテキスト
------------------

タスクが実行されるコンテキスト。

タスクコンテキストで実行される処理単位は、別に規定がない限りタスクのスタック領域を使う。


非タスクコンテキスト
--------------------

割込みハンドラ(割込みサービスルーチン、タイムイベントハンドラを含む)、CPU 例外ハンドラが実行されるコンテキスト。

非タスクコンテキストで実行される処理単位は、別に規定がない限り非タスクコンテキスト用のスタック領域を使う。

タスクコンテキスト専用のサービスコールを呼び出せない。


------------------------------------
カーネルの振る舞いに影響を与える状態
------------------------------------

プロセッサの下記状態は、カーネルの振る舞いに影響を与える。

- 全割り込みロックフラグ
- CPU ロックフラグ
- 割込み優先度マスク
- ディスパッチ禁止フラグ

これらの状態はそれぞれ独立に変化させることができる。


------------------------------------------
全割込みロック状態と全割込みロック解除状態
------------------------------------------

- 全割り込みロック状態 => 全割り込みロックフラグがセットされた状態
   - NMI を除くすべての割り込みがマスクされる
   - 以下のサービスコールのみ呼び出すことができる
      - システムインターフェースレイヤ API
      - カーネル非動作状態を参照するサービスコール(sns_ker)
      - カーネルを終了するサービスコール(ext_ker)
   - 全割り込みロック状態で処理単位からリターンしてはならない
- 全割り込みロック解除状態 => 全割り込みロックフラグがクリアされた状態
- マルチプロセッサ対応カーネルでは、プロセッサごとに状態を持つ


-----------------------------------
CPU ロック状態と CPU ロック解除状態
-----------------------------------

- CPU ロック状態 => CPU ロックフラグがセットされた状態
   - すべてのカーネル管理の割り込みがマスクされる
   - ディスパッチが保留される
   - 以下のサービスコールのみ呼び出すことができる
      - システムインターフェースレイヤ API
      - loc_cpu，unl_cpu
      - uni_spn [#fn1]_
      - dis_int, ena_int, clr_int, ras_int, prb_int
      - sns_ter, sns_ctx, sns_loc, sns_dsp, sns_dpn, sns_ker
      - xsns_dpn [#fn2]_
      - fch_hrt
      - ext_tsk, ext_ker
      - prb_mem [#fn3]_
      - cal_svc [#fn3]_
- CPU ロック解除状態 => CPU ロックフラグがクリアされた状態
- マルチプロセッサ対応カーネルでは、プロセッサごとに状態を持つ


--------------------
割り込み優先度マスク
--------------------

- 割込み優先度マスクが全解除でない状態 => いずれかの割込み要求がマスクされている状態
   - 割り込み優先度マスクと同じかそれより低い割込み優先度を持つ割込みがマスクされる
   - ディスパッチが保留される
   - 自タスクを広義の待ち状態に遷移させる可能性のあるサービスコールは呼び出せない
- 割込み優先度マスク全解除状態 => いずれの割込み要求もマスクされない状態
- マルチプロセッサ対応カーネルでは、プロセッサごとに状態を持つ


------------------------------------------
ディスパッチ禁止状態とディスパッチ許可状態
------------------------------------------

- ディスパッチ禁止状態 => ディスパッチ禁止フラグがセットされた状態
   - ディスパッチは保留される
   - 自タスクを広義の待ち状態に遷移させる可能性のあるサービスコールは呼び出せない
- ディスパッチ許可状態 => ディスパッチ禁止フラグがクリアされた状態
- マルチプロセッサ対応カーネルでは、プロセッサごとに状態を持つ

--------------------
ディスパッチ保留状態
--------------------

以下の状態ではディスパッチが保留される。
この状態のことを総称してディスパッチ保留状態と呼ぶ。

- 非タスクコンテキストの実行中
- CPU ロック状態
- 割込み優先度マスクが全解除でない状態
- ディスパッチ禁止状態

.. note:: 全割り込みロック状態は、カーネル管理外であり、ディスパッチが保留されることをカーネルが保証できないたため、ディスパッチ保留状態には含まれない。


--------------------
カーネル管理外の状態
--------------------

以下の状態はカーネル管理外。
この状態のことを総称してカーネル管理外の状態と呼ぶ。

- 全割込みロック状態
- カーネル管理外の割込みハンドラ実行中
- カーネル管理外の CPU 例外ハンドラ実行中

以下のサービスコールのみを呼び出すことができる。

- システムインターフェースレイヤ API
- sns_ker
- ext_ker
- xsns_dpn [#fn4]_


カーネル管理外の状態では、以下の状態で処理単位が実行される。

- カーネル管理の割込みはマスクされている
- カーネル管理外の割込みの一部がマスクされている場合がある
- 保護機能対応カーネルでは、特権モードで実行される


----------------------------------
処理単位の開始・終了とシステム状態
----------------------------------

各タイミングでの処理状態を説明する。
各表の項目名の意味は次の通り。

- 実行開始条件
   - 各処理単位が実行開始されるシステム状態の条件
- 実行開始時処理
   - 各処理単位の実行開始時にカーネルによって行われるシステム状態の変更処理
- 終了前・リターン前
   - 各処理単位からの終了前・リターン前にアプリケーションが設定しておくべきシステム状態
- 終了時処理・リターン時処理
   - 各処理単位からの終了時・リターン時にカーネルによって行われるシステム状態の変更処理


タスク
------

+-------------------------------+------------------+--------------------+------------------------+
|                               | CPU ロックフラグ | 割込み優先度マスク | ディスパッチ禁止フラグ |
+===============================+==================+====================+========================+
| 実行開始条件                  | 解除             | 全解除             | 許可                   |
+-------------------------------+------------------+--------------------+------------------------+
| 実行開始時処理                | そのまま         | そのまま           | そのまま               |
+-------------------------------+------------------+--------------------+------------------------+
| 終了前                        | 原則解除 [#fn5]_ | 原則解除 [#fn5]_   | 原則解除 [#fn5]_       |
+-------------------------------+------------------+--------------------+------------------------+
| 終了時処理                    | 解除する         | 全解除する         | 許可する               |
+-------------------------------+------------------+--------------------+------------------------+

カーネル管理の割込みハンドラ
----------------------------

+-------------------------------+------------------+--------------------+------------------------+
|                               | CPU ロックフラグ | 割込み優先度マスク | ディスパッチ禁止フラグ |
+===============================+==================+====================+========================+
| 実行開始条件                  | 解除             | 自優先度より低い   | 任意                   |
+-------------------------------+------------------+--------------------+------------------------+
| 実行開始時処理                | そのまま         | 自優先度に [#fn6]_ | そのまま               |
+-------------------------------+------------------+--------------------+------------------------+
| リターン前                    | 原則解除 [#fn5]_ | 変更不可 [#fn7]_   | 変更不可 [#fn7]_       |
+-------------------------------+------------------+--------------------+------------------------+
| リターン時処理                | 解除する         | 元に戻す           | そのまま               |
+-------------------------------+------------------+--------------------+------------------------+

割込みサービスルーチン, タイムイベントハンドラ
----------------------------------------------

+-------------------------------+------------------+--------------------+------------------------+
|                               | CPU ロックフラグ | 割込み優先度マスク | ディスパッチ禁止フラグ |
+===============================+==================+====================+========================+
| 実行開始条件                  | 解除             | 任意 [#fn8]_       | 任意                   |
+-------------------------------+------------------+--------------------+------------------------+
| 実行開始時処理                | そのまま         | そのまま [#fn8]_   | そのまま               |
+-------------------------------+------------------+--------------------+------------------------+
| リターン前                    | 原則解除 [#fn5]_ | 変更不可 [#fn7]_   | 変更不可 [#fn7]_       |
+-------------------------------+------------------+--------------------+------------------------+
| リターン時処理                | 解除する         | そのまま [#fn8]_   | そのまま               |
+-------------------------------+------------------+--------------------+------------------------+

CPU 例外ハンドラ
----------------

+-------------------------------+-------------------+--------------------+------------------------+
|                               | CPU ロックフラグ  | 割込み優先度マスク | ディスパッチ禁止フラグ |
+===============================+===================+====================+========================+
| 実行開始条件                  | 任意              | 任意               | 任意                   |
+-------------------------------+-------------------+--------------------+------------------------+
| 実行開始時処理                | そのまま          | そのまま           | そのまま               |
+-------------------------------+-------------------+--------------------+------------------------+
| リターン前                    | 任意              | 任意               | 任意                   |
+-------------------------------+-------------------+--------------------+------------------------+
| リターン時処理                | 元に戻す          | 元に戻す           | そのまま               |
+-------------------------------+-------------------+--------------------+------------------------+

拡張サービスコール
------------------

+-------------------------------+------------------+--------------------+------------------------+
|                               | CPU ロックフラグ | 割込み優先度マスク | ディスパッチ禁止フラグ |
+===============================+==================+====================+========================+
| 実行開始条件                  | 任意             | 任意               | 任意                   |
+-------------------------------+------------------+--------------------+------------------------+
| 実行開始時処理                | そのまま         | そのまま           | そのまま               |
+-------------------------------+------------------+--------------------+------------------------+
| リターン前                    | 任意             | 任意               | 任意                   |
+-------------------------------+------------------+--------------------+------------------------+
| リターン時処理                | そのまま         | そのまま           | そのまま               |
+-------------------------------+------------------+--------------------+------------------------+

.. rubric:: 脚注

.. [#fn1] マルチプロセッサ対応カーネルのみ
.. [#fn2] CPU 例外ハンドラからのみ
.. [#fn3] 保護機能対応カーネルのみ
.. [#fn4] カーネル管理外の CPU 例外ハンドラからのみ
.. [#fn5] アプリケーションが設定するのが原則だが、してもしなくてもカーネルによって状態が設定される
.. [#fn6] 割込みハンドラを起動した割込みの割込み優先度に変更する
.. [#fn7] その処理単位内で状態を変更するための API が提供されていない
.. [#fn8] 呼び出す割込みハンドラでの状態のまま呼び出され、リターン時にも変更されない

