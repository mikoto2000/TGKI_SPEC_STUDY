================
割込み処理モデル
================

.. index::
   single: 割込み; 割込みハンドラ

----------------
割込み処理の流れ
----------------

.. code-block:: none

            |<-- 割込み要求ライン -->|
   デバイス -----[割込み要求]----+---> 割込みコントローラ -[割込み要求]-> プロセッサ -> 割込みハンドラ -+-> 割込みサービスルーチン
                                 |                                                                      |
   デバイス -----[割込み要求]----+                                                                      +-> 割込みサービスルーチン

.. todo:: 割り込み処理モデルの図を描く


#. アプリケーションが、割込みサービスルーチンを、割込み要求ラインに登録
#. 割込み要求受け付け
#. (カーネル管理の割り込み処理の場合) 割込みハンドラの入り口処理実行
#. 割込みハンドラが、「1.」で登録された割込みサービスルーチンを実行


- 一つの割込み要求ラインに対して複数の割込みサービスルーチンを登録できる
- アプリケーションが用意した割込みハンドラをカーネルに登録できる
- カーネルが用いるタイマ(高分解能タイマ, オーバランタイマ)からの割り込み要求の場合、タイムイベント処理が行われる
   - タイムアウト処理
   - タイムイベント通知処理(タイムイベントハンドラの呼び出しを含む)
- 受け付けた割り込み要求に対して、割込みサービスルーチンも割込みハンドラも登録していない場合の振る舞いはターゲット定義


------------
割込み優先度
------------

- 割り込み要求は優先順位を持つ
- プロセッサは、割込み優先度マスクの現在地よりも高い割込み優先度を持つ割り込み要求のみを受け付ける
- プロセッサは、割り込み要求を受け付けると、割込み優先度マスクを「受け付けた割り込み要求の割込み優先度」に設定する
   - 受け付けた割り込みが NMI の場合は例外とする
   - 割込み処理からのリターン時に、割込み優先度マスクを、「割り込み要求を受け付ける前の値」に戻す
- 割り込み要求が同時に発生した場合、割込み優先度の高い割込みが先に受け付けられるとh限らない
- 割込み優先度は `-1` から連続した負の整数
- 割込み優先度の段階数はターゲット定義


----------------------
割込み要求ラインの属性
----------------------

各割り込み要求ラインは以下の属性を持ち、割り込み要求は、割り込み要求ラインと同一の属性となる。

- 割込み要求禁止フラグ
   - 割込み要求ラインの割込み要求禁止フラグがセットされている場合、その割込み要求ラインの割込み要求はマスクされる
- 割込み優先度
- トリガモード
   - レベルトリガ
      - ポジティブエッジトリガ
      - ネガティブエッジトリガ
   - エッジトリガ
      - ローレベルトリガ
      - ハイレベルトリガ


----------------------
割込みを受け付ける条件
----------------------

NMI 以外の割り込み要求は、次の 4 つの条件がそろった場合に受け付けられる。

- 割込み要求禁止フラグがクリア状態
- 割込み優先度が、割込み優先度マスクの現在値よりも高い(数字が低い)
- 全割込みロックフラグがクリア状態
- 割込み要求がけーねる管理の割り込みである場合には、 CPU ロックフラグがクリアされている

.. note:: 条件のそろった割込み要求が複数ある場合には、その受付順序は規定しない。
          (優先度の高い割込み要求が先に受け付けられるとは限らない)


------------------------------
割込み番号と割込みハンドラ番号
------------------------------

- 割込み番号
   - 割込み要求ラインを識別するための番号
   - ターゲット定義
- 割込みハンドラ番号
   - アプリケーションが用意した割込みハンドラをカーネルに登録する際、それを識別するための番号
   - ターゲット定義

割込み番号と割込みハンドラ番号は、1 対 1 になることが多い。

割込み要求を行ったデバイスが、割込みベクタをプロセッサに渡すようなアーキテクチャでは、割込み番号と割込みハンドラ番号の対応をカーネルが管理しない。
この場合、割込み番号と割込みハンドラ番号は、1 対 1 にならない。

割込みサービスルーチンが登録できるのは、割込み番号と割込みハンドラ番号が 1 対 1 で対応しているもののみ。


------------------------------------
マルチプロセッサにおける割り込み処理
------------------------------------

.. todo:: マルチプロセッサにおける割り込み処理の説明


.. index::
   single: 割込み; カーネル管理外の割込み

------------------------
カーネル管理外の割り込み
------------------------

高い割込み応答性を求められるアプリケーションのために、ある割込み優先度(`TMIN_INTPRI`)よりも高い割込み優先度を持つ割込みはマスクしないこととしている。

- `TMIN_INTPRI` よりも高い割込み優先度を持つ割込みを、「カーネル管理外の割込み」と呼ぶ
- 「カーネル管理外の割込み」から起動される割込みハンドラを「カーネル管理外の割込みハンドラ」と呼ぶ

カーネル管理外の割込みハンドラは、カーネル内の割込み入り口処理を経由せずに実行するのが基本。
(プロセッサの割込みの仕組み的に不可能な場合はある)

カーネル管理外の割込みハンドラが実行開始されるとき、下記のものはターゲット定義となる。

- システム状態
- コンテキスト
- 割込みハンドラ終了時の処理
- 割込みハンドラの記述方法

カーネル管理外の割込みハンドラから呼び出せるサービスコールは次の通り。

- システムインタフェースレイヤの API
- sns_ker
- ext_ker


--------------------------------
カーネル管理外の割込みの設定方法
--------------------------------

基本的にターゲット定義。大体以下のいづれかが採用される。

カーネル構築時にカーネル管理外とする割込みを決める
--------------------------------------------------

次のような場合はこっち。

- NIM 以外にカーネル管理外の割込みを設けない
- カーネル構築時に特定の割込みをカーネル管理外にすると決める

以下はターゲット定義。

- カーネルの API で割込みハンドラを登録できるか
- 割込み要求ラインの属性を設定できるか


カーネル管理外とする割込みをアプリケーションで設定できるようにする
------------------------------------------------------------------

割込みハンドラおよび、割込み要求ラインに、次の属性設定を行うことで、カーネル管理外の割込みを設定できる。

- 割込みハンドラ属性に `TA_NONKERNEL` を指定
- 割込み要求ラインの割込み優先度を `TMIN_INTPRI` よりも高い値とする


